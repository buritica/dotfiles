name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install kcov
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ libcurl4-openssl-dev libdw-dev libiberty-dev binutils-dev libssl-dev
          git clone https://github.com/SimonKagstrom/kcov.git
          cd kcov
          mkdir build
          cd build
          cmake ..
          make
          sudo make install
          cd ../..

      - name: Install BATS and helpers
        run: |
          # Install BATS core
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          ./install.sh $HOME/.local
          cd ..

          # Install BATS helpers
          mkdir -p test/test_helper
          git clone https://github.com/bats-core/bats-support.git test/test_helper/bats-support
          git clone https://github.com/bats-core/bats-assert.git test/test_helper/bats-assert

      - name: YAML Lint
        uses: ibiqlik/action-yamllint@v3

      - name: Markdown Lint
        uses: DavidAnson/markdownlint-cli2-action@v13

      - name: Run BATS tests with coverage
        run: |
          mkdir -p coverage
          kcov --include-pattern=.sh,.bats coverage/ bats test/
          bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Setup chezmoi
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test chezmoi templates
        run: |
          sh -c "$(curl -fsLS get.chezmoi.io)" -- -b $HOME/.local/bin
          export PATH="$HOME/.local/bin:$PATH"
          ./test.sh

      - name: Generate documentation
        uses: docker://pandoc/core:2.9
        with:
          args: >-
            --from=markdown
            --to=html
            --standalone
            --output=docs/index.html
            --metadata title="Dotfiles Documentation"
            --toc
            README.md CONTRIBUTING.md

      - name: Deploy documentation to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

  release:
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          version-file: './package.json,./manifest.json'
          git-message: 'chore(release): {version}'
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          release-count: '0'
          skip-on-empty: 'true'
          skip-version-file: 'true'
          skip-commit: 'true'

      - name: Create Release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false
