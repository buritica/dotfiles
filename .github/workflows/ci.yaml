name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install shellcheck
        run: sudo apt-get install -y shellcheck

      - name: Install shfmt
        run: |
          curl -sS https://webinstall.dev/shfmt | bash
          export PATH="$HOME/.local/bin:$PATH"

      - name: Install BATS
        run: |
          git clone https://github.com/bats-core/bats-core.git
          cd bats-core
          ./install.sh $HOME/.local

      - name: ShellCheck
        run: |
          shellcheck setup.sh
          shellcheck test.sh
          shellcheck run-tests.sh

      - name: Shell Format Check
        run: |
          shfmt -d .

      - name: YAML Lint
        uses: ibiqlik/action-yamllint@v3

      - name: Markdown Lint
        uses: DavidAnson/markdownlint-cli2-action@v13

      - name: Run BATS tests
        run: bats test

      - name: Setup chezmoi
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Test chezmoi templates
        run: |
          sh -c "$(curl -fsLS get.chezmoi.io)" -- -b $HOME/.local/bin
          export PATH="$HOME/.local/bin:$PATH"
          ./test.sh

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: .
          framework: all

  release:
    needs: [test, security]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          version-file: './package.json,./manifest.json'
          git-message: 'chore(release): {version}'
          preset: 'angular'
          tag-prefix: 'v'
          output-file: 'CHANGELOG.md'
          release-count: '0'
          skip-on-empty: 'true'
          skip-version-file: 'true'
          skip-commit: 'true'

      - name: Create Release
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false
